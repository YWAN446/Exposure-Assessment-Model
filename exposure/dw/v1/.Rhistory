sanidata$"en.dil1",sanidata$"en.dil2",sanidata$"en.dil3");
cm.eqv <- cbind(sanidata$"cm.dil1",sanidata$"cm.dil2",sanidata$"cm.dil3");
# corrections...
ec.eqv[1595,3] <- 1.00; ec.eqv[1595,6] <- 1.00;
refdate <- as.POSIXlt(strptime("04/28/2012 12:00:00 CEST", "%m/%d/%Y %H:%M:%S"));
# include starting dilution by sample type (CFU/1mg)
ec.stdil <- array(NA,dim=c(nrow(ec.eqv),ncol(ec.eqv)));
for(i in 1:ncol(ec.eqv)){
ec.stdil[,i] <- ifelse(smp.tp==levels(smp.tp)[2],
ifelse(tdata>=refdate,2/1000,4/1000),
ifelse(smp.tp==levels(smp.tp)[8] | smp.tp==levels(smp.tp)[3] |
smp.tp==levels(smp.tp)[4] | smp.tp==levels(smp.tp)[5], 1,
ifelse(smp.tp==levels(smp.tp)[1], 6,
ifelse(smp.tp==levels(smp.tp)[6] & !is.na(foods$type),
ifelse(foods$type=="prepared food" |
(foods$type=="other" & foods$prtp!="ONION"),
1/2000, 500/(foods$nitm[])),
ifelse(smp.tp==levels(smp.tp)[9],
ifelse(tdata>=refdate, 8, 6),1)))));
}
en.stdil <- array(NA,dim=c(nrow(en.eqv),ncol(en.eqv)));
for(i in 1:ncol(en.eqv)){
en.stdil[,i] <- ifelse(smp.tp==levels(smp.tp)[8], 1,
ifelse(smp.tp==levels(smp.tp)[1], 6, 1));}
cm.stdil <- array(NA,dim=c(nrow(cm.eqv),ncol(cm.eqv)));
for(i in 1:ncol(cm.eqv)){
cm.stdil[,i] <- ifelse(smp.tp==levels(smp.tp)[2],
ifelse(tdata>=refdate,2/1000,4/1000),
ifelse(smp.tp==levels(smp.tp)[3] | smp.tp==levels(smp.tp)[5], 1,
ifelse(smp.tp==levels(smp.tp)[1], 6,
ifelse(smp.tp==levels(smp.tp)[6] & !is.na(foods$type),
ifelse(foods$type=="prepared food" |
(foods$type=="other" & foods$prtp!="ONION"),
1/2000, 500/(foods$nitm[])),1))));
}
ec.eqvol <- ec.eqv * ec.stdil;
en.eqvol <- en.eqv * en.stdil;
cm.eqvol <- cm.eqv * cm.stdil;
# read counts
ec.cnt <- cbind(sanidata$"ec.ecnt1",sanidata$"ec.ecnt2",sanidata$"ec.ecnt3",
sanidata$"ec.ecnt1b",sanidata$"ec.ecnt2b",sanidata$"ec.ecnt3b");
en.cnt <- cbind(sanidata$"en.cnt1",sanidata$"en.cnt2",sanidata$"en.cnt3",
sanidata$"en.cnt1b",sanidata$"en.cnt2b",sanidata$"en.cnt3b");
cm.cnt <- cbind(sanidata$"cm.ccnt1",sanidata$"cm.ccnt2",sanidata$"cm.ccnt3");
# count the number of replicate observations for each sample
mkrepl <- function(rawcnt,rawdil) {
numsam <- length(rawcnt[,1]);
replvec <- rep(NA,numsam);
for(n in 1:numsam) {
replvec[n] <- length(rawcnt[n,!is.na(rawcnt[n,])]);
}
return(round(replvec));
}
# generate dataset with three levels:
# n = sample number
# k = number aliquots tested (total of numaliq max)
# m = c(counted number, equivalent sample volume, indicator for censoring)
# if init =TRUE: same as previous function,
# but now with censored counts set at censorlimit+1
mkcnt.cens <- function(rawcnt,rawvol,numaliq,init=FALSE) {
numsam <- length(rawcnt[,1]);
replvec <- rep(NA,numaliq);
cntdata <- array(NA,dim=c(numsam,numaliq,3));
for(n in 1:numsam) { # loop through all samples
for(k in 1:numaliq) { # initial fill of cntdata array with raw data
cntdata[n,k,1] <- rawcnt[[n,k]];
cntdata[n,k,2] <- rawvol[[n,k]];
cntdata[n,k,3] <- NA; # ignore censoring now
} # sort aliquot vectors: missing last
cntdata[n,,] <- rbind(cntdata[n,!is.na(cntdata[n,,1]),],
cntdata[n,is.na(cntdata[n,,1]),]);
for(k in 1:numaliq) {
if(!is.na(cntdata[n,k,1])){ # count not missing?
if(cntdata[n,k,1] > censorlimit){ # tntc?
if(init){ # are we preparing init data?
cntdata[n,k,1] <- censorlimit+1;
cntdata[n,k,2] <- NA;
cntdata[n,k,3] <- NA;
}else{ # not preparing init data
cntdata[n,k,1] <- NA;
cntdata[n,k,3] <- TRUE;
}
}else{ # not tntc
if(init){ # are we preparing init data?
cntdata[n,k,1] <- NA;
cntdata[n,k,2] <- NA;
cntdata[n,k,3] <- NA;
}else{ # not preparing init date
cntdata[n,k,3] <- FALSE;
}
}
}else{ # count missing!
cntdata[n,k,2] <- NA; # then also no volume
}
}
}
return(cntdata);
}
censorlimit <- 200;
ec.repl <- mkrepl(ec.cnt,ec.eqvol);
ec.data <- mkcnt.cens(ec.cnt,ec.eqvol,6,FALSE);
ec.init <- mkcnt.cens(ec.cnt,ec.eqvol,6,TRUE);
ec.init[notused,,] <- NA;
en.repl <- mkrepl(en.cnt,en.eqvol);
en.data <- mkcnt.cens(en.cnt,en.eqvol,6,FALSE);
en.init <- mkcnt.cens(en.cnt,en.eqvol,6,TRUE);
en.init[notused,,] <- NA;
cm.repl <- mkrepl(cm.cnt,cm.eqvol);
cm.data <- mkcnt.cens(cm.cnt,cm.eqvol,3,FALSE);
cm.init <- mkcnt.cens(cm.cnt,cm.eqvol,3,TRUE);
cm.init[notused,,] <- NA;
sd.ec.logr <- 4;
sd.ec.loglambda <- 10;
sd.en.logr <- 4;
sd.en.loglambda <- 10;
sd.cm.logr <- 4;
sd.cm.loglambda <- 20;
mu.ec.logr <- rep(0,num.comb);
mu.en.logr <- rep(0,num.comb);
mu.cm.logr <- rep(0,num.comb);
mu.ec.loglambda <- rep(NA,num.comb);
mu.en.loglambda <- rep(NA,num.comb);
mu.cm.loglambda <- rep(NA,num.comb);
mkmn <- function(cntvec,eqvvec){
tmp <- na.omit(c(cntvec)/c(eqvvec));
if(length(tmp)!=0){
return(mean(tmp));
}else{
return(NA);
}
}
for(k.comb in 1:num.comb){
ind.k <- ind.env.smp[ind.env.smp[,1]==k.comb,4];
ec.tmp <- mkmn(ec.cnt[ind.k,],ec.eqvol[ind.k,]);
en.tmp <- mkmn(en.cnt[ind.k,],en.eqvol[ind.k,]);
cm.tmp <- mkmn(cm.cnt[ind.k,],cm.eqvol[ind.k,]);
if(is.na(ec.tmp) | ec.tmp==0) ec.tmp <- 1;
mu.ec.loglambda[k.comb] <- log(ec.tmp);
if(is.na(en.tmp) | en.tmp==0) en.tmp <- 1;
mu.en.loglambda[k.comb] <- log(en.tmp);
if(is.na(cm.tmp) | cm.tmp==0) cm.tmp <- 1;
mu.cm.loglambda[k.comb] <- log(cm.tmp);
}
cntdata <- list("sd.ec.logr"=sd.ec.logr,"sd.ec.loglambda"=sd.ec.loglambda,
"sd.en.logr"=sd.en.logr,"sd.en.loglambda"=sd.en.loglambda,
"sd.cm.logr"=sd.cm.logr,"sd.cm.loglambda"=sd.cm.loglambda,
"mu.ec.logr"=mu.ec.logr,"mu.ec.loglambda"=mu.ec.loglambda,
"mu.en.logr"=mu.en.logr,"mu.en.loglambda"=mu.en.loglambda,
"mu.cm.logr"=mu.cm.logr,"mu.cm.loglambda"=mu.cm.loglambda,
"n.smpl"=n.smpl, "num.comb"=num.comb, "n.neighb"=n.neighb,
"censorlimit"=censorlimit,
"ind.env.smp"=ind.env.smp,
"ec.repl"=ec.repl, "ec.data"=ec.data,
"en.repl"=en.repl, "en.data"=en.data,
"cm.repl"=cm.repl, "cm.data"=cm.data);
cntinit <- list("ec.data"=ec.init, "en.data"=en.init, "cm.data"=cm.init);
setwd(paste(sanibase,"data/sanipath02102014/",sep=""));
setwd("T:/IHProjs/Moe Research/Projects/SaniPath/Andrew/sanipath/Sanipathdata/sanipath02102014/")
basedir <- "~/stat/sanipath/exposure/dw/";
basedir
filemc <- paste(basedir,version,"/output/",version,".mcmc.rda",sep="");
version <- "v1"
filemc <- paste(basedir,version,"/output/",version,".mcmc.rda",sep="");
cat("loading drinking water intake parameter estimates ",version,"\n");
load(filemc);
n<-100
beta<-0
sigma.sq<-5
res<rnorm(n,beta,sqrt(sigma.sq))
res<-rnorm(n,beta,sqrt(sigma.sq))
data<-list(res=res,n=n)
inits<-list(beta=0,sigma.sq=1)
jags.m<-jags.model(file="test.jags",data=data,inits=inits,n.chains=3,n.adapt=100)
library(rjags)
n<-100
beta<-0
sigma.sq<-5
res<-rnorm(n,beta,sqrt(sigma.sq))
data<-list(res=res,n=n)
inits<-list(beta=0,sigma.sq=1)
jags.m<-jags.model(file="test.jags",data=data,inits=inits,n.chains=3,n.adapt=100)
library(rjags)
n<-100
beta<-0
sigma.sq<-5
res<-rnorm(n,beta,sqrt(sigma.sq))
data<-list(res=res,n=n)
inits<-list(beta=0,sigma.sq=1)
jags.m<-jags.model(file="test.jags",data=data,inits=inits,n.chains=3,n.adapt=100)
inits
data
getwd()
library(rjags)
set.seed(1)
n<-100
beta<-0
sigma.sq<-5
res<-rnorm(n,beta,sqrt(sigma.sq))
data<-list(y=y,n=n)
inits<-list(beta=0,sigma.sq=1)
jags.m<-jags.model(file="test.jags",data=data,inits=inits,n.chains=3,n.adapt=100)
library(rjags)
set.seed(1)
n<-100
beta<-0
sigma.sq<-5
y<-rnorm(n,beta,sqrt(sigma.sq))
data<-list(y=y,n=n)
inits<-list(beta=0,sigma.sq=1)
jags.m<-jags.model(file="test.jags",data=data,inits=inits,n.chains=3,n.adapt=100)
y
data
inits
library(rjags)
set.seed(1)
n<-100
beta<-0
sigma.sq<-5
y<-rnorm(n,beta,sqrt(sigma.sq))
data<-list(y=y,n=n)
inits<-list(beta=0,sigma.sq=1)
jags.m<-jags.model(file="test.jags",data=data,inits=inits,n.chains=3,n.adapt=100)
library(rjags)
set.seed(1)
n<-100
beta<-0
sigma.sq<-5
y<-rnorm(n,beta,sqrt(sigma.sq))
data<-list(y=y,n=n)
inits<-list(beta=0,sigma.sq=1)
jags.m<-jags.model(file="test.jags",data=data,inits=inits,n.chains=3,n.adapt=100)
y
getwd()
library(rjags)
set.seed(1)
n<-100
beta<-0
sigma.sq<-5
y<-rnorm(n,beta,sqrt(sigma.sq))
data<-list(y=y,n=n)
inits<-list(beta=0,sigma.sq=1)
jags.m<-jags.model(file="test.jags",data=data,inits=inits,n.chains=3,n.adapt=100)
library(rjags)
set.seed(1)
n<-100
beta<-0
sigma.sq<-5
y<-rnorm(n,beta,sqrt(sigma.sq))
data<-list(y=y,n=n)
inits<-list(beta=0,sigma.sq=1)
jags.m<-jags.model(file="test.jags",data=data,inits=inits,n.chains=3,n.adapt=100)
library(rjags)
set.seed(1)
n<-100
beta.0<-0
sigma.sq<-5
y<-rnorm(n,beta.0,sqrt(sigma.sq))
data<-list(y=y,n=n)
inits<-list(beta=0,sigma.sq=1)
jags.m<-jags.model(file="test.jags",data=data,inits=inits,n.chains=3,n.adapt=100)
jags.m<-jags.model(file="test.jags",data=data,inits=inits,n.chains=3,n.adapt=100)
library(rjags)
set.seed(1)
n<-100
beta.0<-0
sigma.sq<-5
y<-rnorm(n,beta.0,sqrt(sigma.sq))
data<-list(y=y,n=n)
inits<-list(beta=0,sigma.sq=1)
jags.m<-jags.model(file="test.jags",data=data,inits=inits,n.chains=3,n.adapt=100)
library(rjags)
set.seed(1)
n<-100
beta.0<-0
sigma.sq<-5
y<-rnorm(n,beta.0,sqrt(sigma.sq))
data<-list(y=y,n=n)
inits<-list(beta.0=0,sigma.sq=1)
jags.m<-jags.model(file="test.jags",data=data,inits=inits,n.chains=3,n.adapt=100)
params<-c("beta.0","sigma.sq")
samps<-coda.samples(jags.m,params,n.iter=2000)
plot(samps)
summary(samps)
params<-c("beta.0","sigma.sq")
samps<-coda.samples(jags.m,params,n.iter=10000)
summary(samps)
summary(y)
std(y)
sd(y)
2.008*2.008
params<-c("beta.0","sigma.sq")
samps<-coda.samples(jags.m,params,n.iter=100000)
summary(samps)
var(y)
n<-100
beta.0<-0
sigma.sq<-5
y<-rnorm(n,beta.0,sqrt(sigma.sq))
data<-list(y=y,n=n)
inits<-list(beta.0=0,sigma.sq=1)
jags.m<-jags.model(file="test.jags",data=data,inits=inits,n.chains=3,n.adapt=100)
params<-c("beta.0","sigma.sq")
samps<-coda.samples(jags.m,params,n.iter=2000)
var(y)
summary(samps)
set.seed(1)
n<-1000
beta.0<-0
sigma.sq<-5
y<-rnorm(n,beta.0,sqrt(sigma.sq))
data<-list(y=y,n=n)
inits<-list(beta.0=0,sigma.sq=1)
jags.m<-jags.model(file="test.jags",data=data,inits=inits,n.chains=3,n.adapt=100)
params<-c("beta.0","sigma.sq")
samps<-coda.samples(jags.m,params,n.iter=2000)
summary(samps)
var(y)
mean(y)
plot(samps)
n<-1000
beta.0<-0
sigma.sq<-5
y<-rnorm(n,beta.0,sqrt(sigma.sq))
data<-list(y=y,n=n)
inits<-list(beta.0=0,sigma.sq=1)
jags.m<-jags.model(file="test.jags",data=data,inits=inits,n.chains=3,n.adapt=500)
params<-c("beta.0","sigma.sq")
samps<-coda.samples(jags.m,params,n.iter=2000)
plot(samps)
library(rjags)
set.seed(1)
n<-1000
beta.0<-0
sigma.sq<-5
y<-rnorm(n,beta.0,sqrt(sigma.sq))
data<-list(y=y,n=n)
inits<-list(beta.0=0,sigma.sq=1)
jags.m<-jags.model(file="test.jags",data=data,inits=inits,n.chains=3,n.adapt=1000)
params<-c("beta.0","sigma.sq")
samps<-coda.samples(jags.m,params,n.iter=2000)
plot(samps)
var(y)
n<-10000
beta.0<-0
sigma.sq<-5
y<-rnorm(n,beta.0,sqrt(sigma.sq))
var(y)
data<-list(y=y,n=n)
inits<-list(beta.0=0,sigma.sq=1)
jags.m<-jags.model(file="test.jags",data=data,inits=inits,n.chains=3,n.adapt=100)
params<-c("beta.0","sigma.sq")
samps<-coda.samples(jags.m,params,n.iter=2000)
plot(samps)
summary(samps)
update(jags.m,n.iter=2000,by,progress.bar="text")
update(jags.m,n.iter=2000,progress.bar="text")
jags.m
library(rjags)
set.seed(1)
n<-100
beta.0<-0
sigma.sq<-5
y<-rnorm(n,beta.0,sqrt(sigma.sq))
data<-list(y=y,n=n)
inits<-list(beta.0=0,sigma.sq=1)
jags.m<-jags.model(file="test.jags",data=data,inits=inits,n.chains=3,n.adapt=100)
update(jags.m,n.iter=2000,progress.bar="text")
params<-c("beta.0","sigma.sq")
samps<-coda.samples(jags.m,params,n.iter=2000)
plot(samps)
burn.in=1000
summary(window(samps,start=burn.in))
library(rjags)
set.seed(1)
n<-100
beta.0<-0
sigma.sq<-5
y<-rnorm(n,beta.0,sqrt(sigma.sq))
data<-list(y=y,n=n)
inits<-list(beta.0=0,sigma.sq=1)
jags.m<-jags.model(file="test.jags",data=data,inits=inits,n.chains=3,n.adapt=100)
#update(jags.m,n.iter=2000,progress.bar="text")
params<-c("beta.0","sigma.sq")
samps<-coda.samples(jags.m,params,n.iter=2000)
plot(samps)
burn.in=1000
summary(window(samps,start=burn.in))
data<-list(y=y,n=n)
inits<-list(beta.0=0,sigma.sq=1)
jags.m<-jags.model(file="test.jags",data=data,inits=inits,n.chains=3,n.adapt=500)
#update(jags.m,n.iter=2000,progress.bar="text")
params<-c("beta.0","sigma.sq")
samps<-coda.samples(jags.m,params,n.iter=2000)
plot(samps)
burn.in=1000
summary(window(samps,start=burn.in))
data<-list(y=y,n=n)
inits<-list(beta.0=0,sigma.sq=1)
jags.m<-jags.model(file="test.jags",data=data,inits=inits,n.chains=3,n.adapt=500)
#update(jags.m,n.iter=2000,progress.bar="text")
params<-c("beta.0","sigma.sq")
samps<-coda.samples(jags.m,params,n.iter=2000)
plot(samps)
burn.in=0
summary(window(samps,start=burn.in))
summary(window(samps))
data<-list(y=y,n=n)
inits<-list(beta.0=0,sigma.sq=1)
jags.m<-jags.model(file="test.jags",data=data,inits=inits,n.chains=3,n.adapt=100)
update(jags.m,n.iter=1000,progress.bar="text")
params<-c("beta.0","sigma.sq")
samps<-coda.samples(jags.m,params,n.iter=2000)
plot(samps)
summary(window(samps))
gelman.diag(samps)
gelman.plot(samps)
n<-100
beta.0<-0
sigma.sq<-5
y<-rnorm(n,beta.0,sqrt(sigma.sq))
data<-list(y=y,n=n)
inits<-list(beta.0=0,sigma.sq=1)
jags.m<-jags.model(file="test.jags",data=data,inits=inits,n.chains=3,n.adapt=100)
update(jags.m,n.iter=1000,progress.bar="text")
params<-c("beta.0","sigma.sq")
samps<-coda.samples(jags.m,params,n.iter=2000)
#plot(samps)
#summary(window(samps))
gelman.diag(samps)
gelman.plot(samps)
n<-100
beta.0<-0
sigma.sq<-5
y<-rnorm(n,beta.0,sqrt(sigma.sq))
data<-list(y=y,n=n)
inits<-list(beta.0=0,sigma.sq=1)
jags.m<-jags.model(file="test.jags",data=data,inits=inits,n.chains=3,n.adapt=100)
update(jags.m,n.iter=1000,progress.bar="text")
params<-c("beta.0","sigma.sq")
samps<-coda.samples(jags.m,params,n.iter=5000)
#plot(samps)
#summary(window(samps))
gelman.diag(samps)
gelman.plot(samps)
setwd("~/stat/sanipath/exposure/dw/v1/")
library('rjags');
version <- "v1";
nburn<-1000;
niter<-100000;
thin<-100;
tomonitor<-c("mu.tap", "tau.tap","mu.sac","tau.sac");
# file names
filedat <- paste(version,".data.r",sep="");
filemod <- paste(version,".model.jags",sep="");
fileres <- paste("output/",version,".res.pdf",sep="");
filetxt <- paste("output/",version,".res.txt",sep="");
fileext <- paste(version,".extract.r",sep="");
# load data
source(filedat);
### POSTERIOR analysis
cat("<<MCMC Sampling>>\n");
model.jags <- jags.model(file=filemod,data=data,inits=data.init,
n.chains=3,n.adapt=nburn,quiet=FALSE);
mcmc.post<-coda.samples(model.jags,tomonitor,n.iter=niter,thin=thin);
save(mcmc.post,file=paste("output/",version,".post.rda",sep=""),ascii=TRUE);
cat("<<< Store results >>>\n");
sink(filetxt);
print(summary(mcmc.post));
sink();
cat("<<< Graph results >>>\n");
pdf(fileres);
plot(mcmc.post,trace=TRUE,density=FALSE);
plot(mcmc.post,trace=FALSE,density=TRUE);
dev.off();
version <- "v1"
n.chains <- 3
n.iter <- 1000
n.neighb <- 4;
basedir <- "~/stat/sanipath/exposure/dw/"
mcmcpost <- paste(basedir,version,"/output/",version,".post.rda",sep="");
mcmcpars <- paste(basedir,version,"/output/",version,".mcmc.rda",sep="");
load(mcmcpost);
extr.mc <- function(varstring) {
tmp <- array(NA,dim=c(n.chains,n.iter));
for(k in 1:n.chains) {
tmp[k,] <- as.vector(mcmc.post[[k]][,varstring]);
}
return(c(tmp));
}
extr.mcvec <- function(varstring,len) {
tmp <- array(NA,dim=c(n.chains,n.iter));
tmpvec <- numeric(0);
for(k.len in 1:len){
for(k.chain in 1:n.chains) {
tmp[k.chain,] <-
as.vector(mcmc.post[[k.chain]][,paste(varstring,"[",k.len,"]",sep="")]);
}
tmpvec <- cbind(tmpvec,c(tmp));
}
return(tmpvec);
}
mu.tap  <- extr.mcvec("mu.tap",n.neighb)
tau.tap <- extr.mcvec("tau.tap",n.neighb)
mu.sac  <- extr.mcvec("mu.sac",n.neighb)
tau.sac <- extr.mcvec("tau.sac",n.neighb)
dwpars <- list("freqs"=c(freq.tap,freq.sac),
"mu.tap"=mu.tap,"tau.tap"=tau.tap,
"mu.sac"=mu.sac,"tau.sac"=tau.sac);
save(dwpars,file=mcmcpars,ascii=TRUE);
tap.levels
drink.tap.init
drink.tap
